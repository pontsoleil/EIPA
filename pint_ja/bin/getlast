#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
	Usage   : ${0##*/} [+ng] <k1> <k2> <file>
	Version : 2017-07-18 00:23:25 JST
	        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}


# initialize
set -u
umask 0022
PATH='/usr/bin:/bin'
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
export IFS LANG=C LC_ALL=C PATH
disable_ng='#'
file=''

# parse the arguments
[ $# -gt 0 ] || print_usage_and_exit
if [ "_$1" = "_+ng" ]; then
  disable_ng=''
  shift
fi
[ $# -ge 2 ] || print_usage_and_exit
printf '%s\n' "$1" | grep -q '^[0-9]\{1,\}$' || print_usage_and_exit
stf=$1
shift
printf '%s\n' "$1" | grep -q '^[0-9]\{1,\}$' || print_usage_and_exit
edf=$1
shift
[ $# -lt 2 ] || print_usage_and_exit
if [ $# -eq 1 ]; then
  file=$1
else
  file='-'
fi

# validate the file arguments
if [ $stf -gt $edf ]; then
  printf '%s: <k2> must be grater than <k1> or equal\n' "${0##*/}" 1>&2
  exit 1
fi
if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
  printf '%s: Cannot open the file\n' "${0##*/}" 1>&2
  exit 1
fi
case "$file" in ''|-|/*|./*|../*) :;; *) file="./$file";; esac

# main
exec awk -v stf=$stf -v edf=$edf '
BEGIN {
  data = "";    # previous line
  key0 = "";    # key of previous line
  if (getline) {
    data = $0;
    for (i=stf; i<=edf; i++) {
      key0 = key0 FS $i;
    }
  }
}
{
  key = "";
  for (i=stf; i<=edf; i++) {
    key = key FS $i;
  }
  if (key != key0) {
    print data;
  '$disable_ng'} else {
  '$disable_ng'  print data | "cat 1>&2";
  }
  data = $0;
  key0 = key;
}
END {
  if (NR > 0) {
    print data;
  }
}
' "$file"
