context	id	flag	test	#text	BG	BT
cac:AdditionalDocumentReference	ibr-52	fatal	(cbc:ID) != ''	[ibr-52]-Each Additional supporting document (ibg-24) shall contain a Supporting document reference (ibt-122).	ibg-24	ibt-122
cac:LegalMonetaryTotal/cbc:PayableAmount	ibr-67	fatal	string-length(substring-after(., '.')) <= 2	[ibr-67]-Invoice amount due for payment (ibt-115) shall have no more than 2 decimals.		ibt-115
cac:LegalMonetaryTotal/cbc:PayableAmount	ibr-co-25	fatal	((. > 0) and (exists(//cbc:DueDate) or exists(//cac:PaymentTerms/cbc:Note))) or (. <= 0)	[ibr-co-25]-In case the Amount due for payment (ibt-115) is positive, either the Payment due date (ibt-009) or the Payment terms (ibt-020) shall be present.		ibt-115 bt-009 bt-020
cac:AccountingCustomerParty/cac:Party/cbc:EndpointID	ibr-63	fatal	exists(@schemeID)	[ibr-63]-The Buyer electronic address (ibt-049) shall have a Scheme identifier.		ibt-049
cac:AccountingCustomerParty/cac:Party/cac:PostalAddress	ibr-11	fatal	(cac:Country/cbc:IdentificationCode) != ''	[ibr-11]-The Buyer postal address (ibg-089 shall contain a Buyer country code (ibt-055).	ibg-089	ibt-055
cac:Delivery/cac:DeliveryLocation/cac:Address	ibr-57	fatal	exists(cac:Country/cbc:IdentificationCode)	[ibr-57]-Each Deliver to address (ibg-15) shall contain a Deliver to country code (ibt-080).	ibg-15	ibt-080
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-31	fatal	exists(cbc:Amount)	[ibr-31]-Each Document level allowance (ibg-20) shall have a Document level allowance amount (ibt-092).	ibg-20	ibt-092
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-33	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-33]-Each Document level allowance (ibg-20) shall have a Document level allowance reason (ibt-907) or a Document level allowance reason code (ibt-098).	ibg-20	ibt-907 bt-098
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-co-05	fatal	true()	[ibr-co-05]-Document level allowance reason code (ibt-098) and Document level allowance reason (ibt-097) shall indicate the same type of allowance.		ibt-098 bt-097
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-co-21	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-co-21]-Each Document level allowance (ibg-20) shall contain a Document level allowance reason (ibt-097) or a Document level allowance reason code (ibt-098), or both.	ibg-20	ibt-097 bt-098
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-36	fatal	exists(cbc:Amount)	[ibr-36]-Each Document level charge (ibg-21) shall have a Document level charge amount (ibt-099).	ibg-21	ibt-099
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-38	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-38]-Each Document level charge (ibg-21) shall have a Document level charge reason (ibt-104) or a Document level charge reason code (ibt-105).	ibg-21	ibt-104 bt-105
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-co-06	fatal	true()	[ibr-co-06]-Document level charge reason code (ibt-105) and Document level charge reason (ibt-104) shall indicate the same type of charge.		ibt-105 bt-104
/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-co-22	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-co-22]-Each Document level charge (ibg-21) shall contain a Document level charge reason (ibt-104) or a Document level charge reason code (ibt-105), or both.	ibg-21	ibt-104 bt-105
cac:LegalMonetaryTotal	ibr-12	fatal	exists(cbc:LineExtensionAmount)	[ibr-12]-An Invoice shall have the Sum of Invoice line net amount (ibt-106).		ibt-106
cac:LegalMonetaryTotal	ibr-13	fatal	exists(cbc:TaxExclusiveAmount)	[ibr-13]-An Invoice shall have the Invoice total amount without Tax (ibt-109).		ibt-109
cac:LegalMonetaryTotal	ibr-14	fatal	exists(cbc:TaxInclusiveAmount)	[ibr-14]-An Invoice shall have the Invoice total amount with Tax (ibt-112).		ibt-112
cac:LegalMonetaryTotal	ibr-15	fatal	exists(cbc:PayableAmount)	[ibr-15]-An Invoice shall have the Amount due for payment (ibt-115).		ibt-115
cac:LegalMonetaryTotal	ibr-co-10	fatal	(xs:decimal(cbc:LineExtensionAmount) = sum(//(cac:InvoiceLine|cac:CreditNoteLine)/xs:decimal(cbc:LineExtensionAmount)))	[ibr-co-10]-Sum of Invoice line net amount (ibt-106) = Σ Invoice line net amount (ibt-131).		ibt-106 bt-131
cac:LegalMonetaryTotal	ibr-co-11	fatal	xs:decimal(cbc:AllowanceTotalAmount) = sum(../cac:AllowanceCharge[cbc:ChargeIndicator=false()]/xs:decimal(cbc:Amount)) or (not(cbc:AllowanceTotalAmount) and not(../cac:AllowanceCharge[cbc:ChargeIndicator=false()]))	[ibr-co-11]-Sum of allowances on document level (ibt-107) = Σ Document level allowance amount (ibt-092).		ibt-107 bt-092
cac:LegalMonetaryTotal	ibr-co-12	fatal	xs:decimal(cbc:ChargeTotalAmount) = sum(../cac:AllowanceCharge[cbc:ChargeIndicator=true()]/xs:decimal(cbc:Amount)) or (not(cbc:ChargeTotalAmount) and not(../cac:AllowanceCharge[cbc:ChargeIndicator=true()]))	[ibr-co-12]-Sum of charges on document level (ibt-108) = Σ Document level charge amount (ibt-099).		ibt-108 bt-099
cac:LegalMonetaryTotal	ibr-co-13	fatal	((cbc:ChargeTotalAmount) and (cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = xs:decimal(cbc:LineExtensionAmount) + xs:decimal(cbc:ChargeTotalAmount) - xs:decimal(cbc:AllowanceTotalAmount))) or (not(cbc:ChargeTotalAmount) and (cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = xs:decimal(cbc:LineExtensionAmount) - xs:decimal(cbc:AllowanceTotalAmount))) or ((cbc:ChargeTotalAmount) and not(cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = xs:decimal(cbc:LineExtensionAmount) + xs:decimal(cbc:ChargeTotalAmount))) or (not(cbc:ChargeTotalAmount) and not(cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = xs:decimal(cbc:LineExtensionAmount)))	[ibr-co-13]-Invoice total amount without Tax (ibt-109) = Σ Invoice line net amount (ibt-131) - Sum of allowances on document level (ibt-107) + Sum of charges on document level (ibt-108).		ibt-109 bt-131 bt-107 bt-108
cac:LegalMonetaryTotal	ibr-co-16	fatal	(xs:decimal(cbc:PrepaidAmount) and not(xs:decimal(cbc:PayableRoundingAmount)) and (xs:decimal(cbc:PayableAmount) = xs:decimal(cbc:TaxInclusiveAmount) - xs:decimal(cbc:PrepaidAmount))) or (not(xs:decimal(cbc:PrepaidAmount)) and not(xs:decimal(cbc:PayableRoundingAmount)) and xs:decimal(cbc:PayableAmount) = xs:decimal(cbc:TaxInclusiveAmount)) or (xs:decimal(cbc:PrepaidAmount) and xs:decimal(cbc:PayableRoundingAmount) and ((xs:decimal(cbc:PayableAmount) - xs:decimal(cbc:PayableRoundingAmount)) = xs:decimal(cbc:TaxInclusiveAmount) - xs:decimal(cbc:PrepaidAmount))) or (not(xs:decimal(cbc:PrepaidAmount)) and xs:decimal(cbc:PayableRoundingAmount) and ((xs:decimal(cbc:PayableAmount) - xs:decimal(cbc:PayableRoundingAmount)) = xs:decimal(cbc:TaxInclusiveAmount)))	[ibr-co-16]-Amount due for payment (ibt-115) = Invoice total amount with Tax (ibt-112) - Paid amount (ibt-113) + Rounding amount (ibt-114).		ibt-115 bt-112 bt-113 bt-114
/ubl:Invoice | /cn:CreditNote	ibr-01	fatal	(cbc:CustomizationID) != ''	[ibr-01]-An Invoice shall have a Specification identifier (ibt-024).		ibt-024
/ubl:Invoice | /cn:CreditNote	ibr-02	fatal	(cbc:ID) !=''	[ibr-02]-An Invoice shall have an Invoice number (ibt-001).		ibt-001
/ubl:Invoice | /cn:CreditNote	ibr-03	fatal	(cbc:IssueDate) !=''	[ibr-03]-An Invoice shall have an Invoice issue date (ibt-002).		ibt-002
/ubl:Invoice | /cn:CreditNote	ibr-04	fatal	(cbc:InvoiceTypeCode) !='' or (cbc:CreditNoteTypeCode) !=''	[ibr-04]-An Invoice shall have an Invoice type code (ibt-003).		ibt-003
/ubl:Invoice | /cn:CreditNote	ibr-05	fatal	(cbc:DocumentCurrencyCode) !=''	[ibr-05]-An Invoice shall have an Invoice currency code (ibt-005).		ibt-005
/ubl:Invoice | /cn:CreditNote	ibr-06	fatal	(cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName) !=''	[ibr-06]-An Invoice shall contain the Seller name (ibt-027).		ibt-027
/ubl:Invoice | /cn:CreditNote	ibr-07	fatal	(cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName) !=''	[ibr-07]-An Invoice shall contain the Buyer name (ibt-044).		ibt-044
/ubl:Invoice | /cn:CreditNote	ibr-08	fatal	exists(cac:AccountingSupplierParty/cac:Party/cac:PostalAddress)	[ibr-08]-An Invoice shall contain the Seller postal address (ibg-05).	ibg-05	
/ubl:Invoice | /cn:CreditNote	ibr-10	fatal	exists(cac:AccountingCustomerParty/cac:Party/cac:PostalAddress)	[ibr-10]-An Invoice shall contain the Buyer postal address (ibg-08).	ibg-08	
/ubl:Invoice | /cn:CreditNote	ibr-16	fatal	exists(cac:InvoiceLine) or exists(cac:CreditNoteLine)	[ibr-16]-An Invoice shall have at least one Invoice line (ibg-25)	ibg-25	
/ubl:Invoice | /cn:CreditNote	ibr-53	fatal	every $taxcurrency in cbc:TaxCurrencyCode satisfies exists(//cac:TaxTotal/cbc:TaxAmount[@currencyID=$taxcurrency])	[ibr-53]-If the Tax accounting currency code (ibt-006) is present, then the Invoice total Tax amount in accounting currency (ibt-111) shall be provided.		ibt-006 bt-111
/ubl:Invoice | /cn:CreditNote	ibr-co-15	fatal	every $Currency in cbc:DocumentCurrencyCode satisfies cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount)	[ibr-co-15]-Invoice total amount with Tax (ibt-112) = Invoice total amount without Tax (ibt-109) + Invoice total Tax amount (ibt-110).		ibt-112 bt-109 bt-110
cac:InvoiceLine | cac:CreditNoteLine	ibr-21	fatal	(cbc:ID) != ''	[ibr-21]-Each Invoice line (ibg-25) shall have an Invoice line identifier (ibt-126).	ibg-25	ibt-126
cac:InvoiceLine | cac:CreditNoteLine	ibr-22	fatal	exists(cbc:InvoicedQuantity) or exists(cbc:CreditedQuantity)	[ibr-22]-Each Invoice line (ibg-25) shall have an Invoiced quantity (ibt-129).	ibg-25	ibt-129
cac:InvoiceLine | cac:CreditNoteLine	ibr-23	fatal	exists(cbc:InvoicedQuantity/@unitCode) or exists(cbc:CreditedQuantity/@unitCode)	[ibr-23]-An Invoice line (ibg-25) shall have an Invoiced quantity unit of measure code (ibt-130).	ibg-25	ibt-130
cac:InvoiceLine | cac:CreditNoteLine	ibr-24	fatal	exists(cbc:LineExtensionAmount)	[ibr-24]-Each Invoice line (ibg-25) shall have an Invoice line net amount (ibt-131).	ibg-25	ibt-131
cac:InvoiceLine | cac:CreditNoteLine	ibr-25	fatal	(cac:Item/cbc:Name) != ''	[ibr-25]-Each Invoice line (ibg-25) shall contain the Item name (ibt-153).	ibg-25	ibt-153
cac:InvoiceLine | cac:CreditNoteLine	ibr-26	fatal	exists(cac:Price/cbc:PriceAmount)	[ibr-26]-Each Invoice line (ibg-25) shall contain the Item net price (ibt-146).	ibg-25	ibt-146
cac:InvoiceLine | cac:CreditNoteLine	ibr-27	fatal	(cac:Price/cbc:PriceAmount) >= 0	[ibr-27]-The Item net price (ibt-146) shall NOT be negative.		ibt-146
cac:InvoiceLine | cac:CreditNoteLine	ibr-28	fatal	(cac:Price/cac:AllowanceCharge/cbc:BaseAmount) >= 0 or not(exists(cac:Price/cac:AllowanceCharge/cbc:BaseAmount))	[ibr-28]-The Item gross price (ibt-148) shall NOT be negative.		ibt-148
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-41	fatal	exists(cbc:Amount)	[ibr-41]-Each Invoice line allowance (ibg-27) shall have an Invoice line allowance amount (ibt-136).	ibg-27	ibt-136
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-42	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-42]-Each Invoice line allowance (ibg-27) shall have an Invoice line allowance reason (ibt-139) or an Invoice line allowance reason code (ibt-140).	ibg-27	ibt-139 bt-140
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()]	ibr-co-07	fatal	true()	[ibr-co-07]-When both Invoice line allowance reason code (iibt-140) and Invoice line allowance reason (iibt-139) the definition of the code is normative.		ibt-140 bt-139
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-43	fatal	exists(cbc:Amount)	[ibr-43]-Each Invoice line charge (ibg-28) shall have an Invoice line charge amount (ibt-141).	ibg-28	ibt-141
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-44	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-44]-Each Invoice line charge (ibg-28) shall have an Invoice line charge reason (ibt-144) or an invoice line allowance reason code (ibt-145).	ibg-28	ibt-144 bt-145
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-co-08	fatal	true()	[ibr-co-08]-When both Invoice line charge reason code (iibt-145) and Invoice line charge reason (iibt-144) the definition of the code is normative.		ibt-145 bt-144
//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()]	ibr-co-24	fatal	exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)	[ibr-co-24]-Each Invoice line charge (ibg-28) shall contain an Invoice line charge reason (ibt-144) or an Invoice line charge reason code (ibt-145), or both.	ibg-28	ibt-144 bt-145
cac:InvoiceLine/cac:InvoicePeriod | cac:CreditNoteLine/cac:InvoicePeriod	ibr-30	fatal	(exists(cbc:EndDate) and exists(cbc:StartDate) and xs:date(cbc:EndDate) >= xs:date(cbc:StartDate)) or not(exists(cbc:StartDate)) or not(exists(cbc:EndDate))	[ibr-30]-If both Invoice line period start date (ibt-134) and Invoice line period end date (ibt-135) are given then the Invoice line period end date (ibt-135) shall be later or equal to the Invoice line period start date (ibt-134).		ibt-134 bt-135 bt-135 bt-134
cac:InvoiceLine/cac:InvoicePeriod | cac:CreditNoteLine/cac:InvoicePeriod	ibr-co-20	fatal	exists(cbc:StartDate) or exists(cbc:EndDate)	[ibr-co-20]-If Invoice line period (ibg-26) is used, the Invoice line period start date (ibt-134) or the Invoice line period end date (ibt-135) shall be filled, or both.	ibg-26	ibt-134 bt-135
cac:InvoicePeriod	ibr-29	fatal	(exists(cbc:EndDate) and exists(cbc:StartDate) and xs:date(cbc:EndDate) >= xs:date(cbc:StartDate)) or not(exists(cbc:StartDate)) or not(exists(cbc:EndDate))	[ibr-29]-If both Invoicing period start date (ibt-073) and Invoicing period end date (ibt-074) are given then the Invoicing period end date (ibt-074) shall be later or equal to the Invoicing period start date (ibt-073).		ibt-073 bt-074 bt-074 bt-073
cac:InvoicePeriod	ibr-co-19	fatal	exists(cbc:StartDate) or exists(cbc:EndDate) or (exists(cbc:DescriptionCode) and not(exists(cbc:StartDate)) and not(exists(cbc:EndDate)))	[ibr-co-19]-If Invoicing period (ibg-14) is used, the Invoicing period start date (ibt-073) or the Invoicing period end date (ibt-074) shall be filled, or both.	ibg-14	ibt-073 bt-074
//cac:AdditionalItemProperty	ibr-54	fatal	exists(cbc:Name) and exists(cbc:Value)	[ibr-54]-Each Item attribute (ibg-32) shall contain an Item attribute name (ibt-160) and an Item attribute value (ibt-161).	ibg-32	ibt-160 bt-161
cac:InvoiceLine/cac:Item/cac:CommodityClassification/cbc:ItemClassificationCode | cac:CreditNoteLine/cac:Item/cac:CommodityClassification/cbc:ItemClassificationCode	ibr-65	fatal	exists(@listID)	[ibr-65]-The Item classification identifier (ibt-158) shall have a Scheme identifier.		ibt-158
cac:InvoiceLine/cac:Item/cac:StandardItemIdentification/cbc:ID | cac:CreditNoteLine/cac:Item/cac:StandardItemIdentification/cbc:ID	ibr-64	fatal	exists(@schemeID)	[ibr-64]-The Item standard identifier (ibt-157) shall have a Scheme identifier.		ibt-157
cac:PayeeParty	ibr-17	fatal	exists(cac:PartyName/cbc:Name) and (not(cac:PartyName/cbc:Name = ../cac:AccountingSupplierParty/cac:Party/cac:PartyName/cbc:Name) and not(cac:PartyIdentification/cbc:ID = ../cac:AccountingSupplierParty/cac:Party/cac:PartyIdentification/cbc:ID) )	[ibr-17]-The Payee name (ibt-059) shall be provided in the Invoice, if the Payee (ibg-10) is different from the Seller (ibg-4).	ibg-10 bg-4	ibt-059
cac:PaymentMeans	ibr-49	fatal	exists(cbc:PaymentMeansCode)	[ibr-49]-A Payment instruction (ibg-16) shall specify the Payment means type code (ibt-081).	ibg-16	ibt-081
cac:BillingReference	ibr-55	fatal	exists(cac:InvoiceDocumentReference/cbc:ID)	[ibr-55]-Each Preceding Invoice reference (ibg-03) shall contain a Preceding Invoice reference (ibt-025).	ibg-03	ibt-025
cac:AccountingSupplierParty	ibr-co-26	fatal	exists(cac:Party/cac:PartyTaxScheme/cbc:CompanyID) or exists(cac:Party/cac:PartyIdentification/cbc:ID) or exists(cac:Party/cac:PartyLegalEntity/cbc:CompanyID)	[ibr-co-26]-In order for the buyer to automatically identify a supplier, the Seller identifier (ibt-029), the Seller legal registration identifier (ibt-030) and/or the Seller Tax identifier (ibt-031) shall be present.		ibt-029 bt-030 bt-031
cac:AccountingSupplierParty/cac:Party/cbc:EndpointID	ibr-62	fatal	exists(@schemeID)	[ibr-62]-The Seller electronic address (ibt-034) shall have a Scheme identifier.		ibt-034
cac:AccountingSupplierParty/cac:Party/cac:PostalAddress	ibr-09	fatal	(cac:Country/cbc:IdentificationCode) != ''	[ibr-09]-The Seller postal address (ibg-05) shall contain a Seller country code (ibt-040).	ibg-05	ibt-040
cac:TaxRepresentativeParty	ibr-18	fatal	(cac:PartyName/cbc:Name) != ''	[ibr-18]-The Seller tax representative name (ibt-062) shall be provided in the Invoice, if the Seller (ibg-04) has a Seller tax representative party (ibg-11)	ibg-04 bg-11	ibt-062
cac:TaxRepresentativeParty	ibr-19	fatal	exists(cac:PostalAddress)	[ibr-19]-The Seller tax representative postal address (ibg-12) shall be provided in the Invoice, if the Seller (ibg-04) has a Seller tax representative party (ibg-11).	ibg-12 bg-04 bg-11	
cac:TaxRepresentativeParty	ibr-56	fatal	exists(cac:PartyTaxScheme/cbc:CompanyID)	[ibr-56]-Each Seller tax representative party (ibg-11) shall have a Seller tax representative Tax identifier (ibt-063).	ibg-11	ibt-063
cac:TaxRepresentativeParty/cac:PostalAddress	ibr-20	fatal	(cac:Country/cbc:IdentificationCode) != ''	[ibr-20]-The Seller tax representative postal address (ibg-12) shall contain a Tax representative country code (ibt-069), if the Seller (ibg-04) has a Seller tax representative party (ibg-11).	ibg-12 bg-04 bg-11	ibt-069
/ubl:Invoice/cac:TaxTotal | /cn:CreditNote/cac:Taxtotal	ibr-co-14	fatal	(xs:decimal(cbc:TaxAmount) = sum(cac:TaxSubtotal/xs:decimal(cbc:TaxAmount))) or not(cac:TaxSubtotal)	[ibr-co-14]-Invoice total Tax amount (ibt-110) = Σ Tax category tax amount (ibt-117).		ibt-110 bt-117
